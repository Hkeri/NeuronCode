
from ultralytics import YOLO
import cv2
import math 
# start webcam
cap = cv2.VideoCapture(0)
cap.set(3, 640)
cap.set(4, 480)

# model
model = YOLO("yolo-Weights/yolov8n.pt")

# object classes
class_labels = [
    "background",
    "person",
    "car",
    "bicycle",
    "motorcycle",
    "bus",
    "train",
    "truck",
    "airplane",
    "boat",
    "house",
    "tree",
    "flower",
    "grass",
    "road",
    "sidewalk",
    "street",
    "building",
    "lamp post",
    "bench",
    "table",
    "chair",
    "sofa",
    "bed",
    "wardrobe",
    "mirror",
    "door",
    "window",
    "roof",
    "floor",
    "ceiling",
    "carpet",
    "rug",
    "kitchen",
    "stove",
    "refrigerator",
    "microwave",
    "oven",
    "sink",
    "toaster",
    "cupboard",
    "countertop",
    "cutlery",
    "plate",
    "bowl",
    "glass",
    "mug",
    "pot",
    "pan",
    "knife",
    "fork",
    "spoon",
    "napkin",
    "trash can",
    "light bulb",
    "lamp",
    "fan",
    "clock",
    "television",
    "remote",
    "computer",
    "laptop",
    "keyboard",
    "mouse",
    "printer",
    "phone",
    "tablet",
    "charger",
    "headphones",
    "book",
    "notebook",
    "pen",
    "pencil",
    "eraser",
    "marker",
    "scissors",
    "tape",
    "glue",
    "stapler",
    "paper",
    "folder",
    "backpack",
    "bag",
    "wallet",
    "purse",
    "umbrella",
    "hat",
    "scarf",
    "gloves",
    "shoes",
    "socks",
    "belt",
    "jacket",
    "sweater",
    "t-shirt",
    "shorts",
    "pants",
    "dress",
    "skirt",
    "sandal",
    "boot",
    "watch",
    "ring",
    "necklace",
    "earrings",
    "toothbrush",
    "toothpaste",
    "soap",
    "shampoo",
    "conditioner",
    "towel",
    "razor",
    "hair dryer",
    "comb",
    "brush",
    "makeup",
    "lotion",
    "sunscreen",
    "first aid kit",
    "band-aid",
    "thermometer",
    "food",
    "fruit",
    "vegetable",
    "bread",
    "meat",
    "cheese",
    "egg",
    "milk",
    "juice",
    "water",
    "soda",
    "snack",
    "cereal",
    "rice",
    "pasta",
    "sauce",
    "spice",
    "herb",
    "candy",
    "cookie",
    "cake",
    "pizza",
    "hamburger",
    "hot dog",
    "sandwich",
    "salad",
    "potato",
    "onion",
    "garlic",
    "pepper",
    "tomato",
    "cucumber",
    "carrot",
    "broccoli",
    "lettuce",
    "spinach",
    "corn",
    "apple",
    "banana",
    "orange",
    "grape",
    "strawberry",
    "blueberry",
    "pineapple",
    "watermelon",
    "melon",
    "kiwi",
    "peach",
    "plum",
    "cherry",
    "coconut",
    "lemon",
    "lime",
    "nut",
    "peanut",
    "almond",
    "walnut",
    "hazelnut",
    "cashew",
    "chocolate",
    "popcorn",
    "chips",
    "pretzel",
    "crackers",
    "granola",
    "yogurt",
    "honey",
    "jam",
    "mustard",
    "ketchup",
    "mayonnaise",
    "oil",
    "vinegar",
    "tortilla",
    "bagel",
    "croissant",
    "muffin",
    "donut",
    "pudding",
    "gelato",
    "sorbet",
    "salsa",
    "hummus",
    "taco",
    "burrito",
    "quesadilla",
    "curry",
    "soup",
    "chili",
    "casser ole",
    "omelette",
    "crepe",
    "pancake",
    "waffle",
    "milkshake",
    "coffee",
    "tea",
    "sugar",
    "salt",
    "pepper shaker",
    "broom",
    "mop",
    "vacuum",
    "bucket",
    "sponge",
    "cleaner",
    "detergent",
    "iron",
    "ironing board",
    "laundry basket",
    "clothesline",
    "clothes hanger",
    "shovel",
    "rake",
    "hoe",
    "trowel",
    "wheelbarrow",
    "garden hose",
    "lawn mower",
    "hedge trimmer",
    "saw",
    "hammer",
    "screwdriver",
    "wrench",
    "pliers",
    "nail",
    "screw",
    "bolt",
    "washer",
    "drill",
    "tape measure",
    "level",
    "safety goggles",
    "gloves",
    "mask",
    "toolbox",
    "first aid kit",
    "fire extinguisher",
    "flashlight",
    "batteries",
    "backpack",
    "suitcase",
    "briefcase",
    "luggage",
    "map",
    "compass",
    "binoculars",
    "camera",
    "tripod"
]


while True:
    success, img = cap.read()
    results = model(img, stream=True)

    # coordinates
    for r in results:
        boxes = r.boxes

        for box in boxes:
            # bounding box
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2) # convert to int values

            # put box in cam
            cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)

            # confidence
            confidence = math.ceil((box.conf[0]*100))/100

            # class name
            cls = int(box.cls[0])

            # object details
            org = [x1, y1]
            font = cv2.FONT_HERSHEY_SIMPLEX
            fontScale = 1
            color = (255, 0, 0)
            thickness = 2

            cv2.putText(img, class_labels[cls], org, font, fontScale, color, thickness)

    cv2.imshow('Webcam', img)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
